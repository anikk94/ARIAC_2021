options:
  insert_models_over_bins: true
  belt_population_cycles: 10
  insert_models_over_stations: true
  gazebo_state_logging: true
time_limit: 500

agv_infos:
  agv1:
    location: as2
  agv2:
    location: as2
  agv3:
    location: ks3
  agv4:
    location: ks4
    products:
       part_0:
         type: assembly_battery_green
         pose:
           xyz: [0.1, 0.1, 0]
           rpy: [0, 0, 0]
       part_1:
           type: assembly_regulator_red
           pose:
             xyz: [-0.1, -0.1, 0]
             rpy: [0, 0, 0]    
    
orders:
  # Example for tasking one robot to do assembly and one robot to do kitting
  order_0:
    priority: 1
    kitting_robot_health: 1 
    assembly_robot_health: 1 
    announcement_condition: time
    announcement_condition_value: 0.0
    kitting:
      shipment_count: 1
      agvs: [agv4]
      destinations: [as3]
      products:
        part_0:
          type: assembly_battery_green
          pose:
            xyz: [0.1, 0.1, 0]
            rpy: [0, 0, 0]
        part_1:
          type: assembly_regulator_red
          pose:
            xyz: [-0.1, -0.1, 0]
            rpy: [0, 0, 0]
    assembly:
      shipment_count: 1
      stations: [as4]
      products:
        part_0:
          type: assembly_battery_green
          pose:
            xyz: [-0.032465, 0.174845, 0.15]
            rpy: [0, 0, 0]
        part_1:
          type: assembly_pump_blue
          pose:
            xyz: [0.032085, -0.152835, 0.25]
            rpy: [0, 0, 0]
  # order_1:
  #   priority: 3 # default is 1 if omitted, we could omit this line
  #   kitting_robot_health: 1 # information on health for kitting robot
  #   assembly_robot_health: 1 # information on health for assembly robot
  #   announcement_condition: unwanted_products
  #   announcement_condition_value: 1
  #   kitting:
  #     shipment_count: 1
  #     agvs: [agv3]
  #     destinations: [as4]
  #     products:
  #       part_0:
  #         type: assembly_battery_green
  #         pose:
  #           xyz: [0.1, 0.1, 0]
  #           rpy: ['pi/2', 0, 0]
  # order_1:
  #   priority: 1 # default is 1 if omitted, we could omit this line
  #   kitting_robot_health: 1 
  #   assembly_robot_health: 1
  #   announcement_condition: agv_station_reached
  #   announcement_condition_value: agv4_at_as3
  #   assembly:
  #     shipment_count: 1
  #     stations: [as1]
  #     products:
  #       part_0:
  #         type: assembly_battery_blue
  #         pose:
  #           xyz: [-0.032465, 0.174845, 0.15]
  #           rpy: [0, 0, 0]

models_over_bins:
   bin3:
     models:
       assembly_battery_blue:
         xyz_start: [0.2, 0.2, 0.0]
         xyz_end: [0.4, 0.4, 0.0]
         rpy: [0, 0, 0]
         num_models_x: 2
         num_models_y: 2
   bin8:
     models:
       assembly_battery_blue:
         xyz_start: [0.1, 0.2, 0.0]
         xyz_end: [0.4, 0.5, 0.0]
         rpy: [0, 0, 'pi/4']
         num_models_x: 2
         num_models_y: 2

belt_models:
  assembly_battery_green:
    10.0:
      pose:
        xyz: [0.0, 4.3, 0.92]
        rpy: [0, 0, 0]

models_over_stations:
  as2:
    models:
      assembly_battery_green:
        xyz: [-0.032465, 0.174845, 0.15]
        rpy: [0, 0, 'pi']
      assembly_pump_red:
        xyz: [0.032085, -0.152835, 0.15]
        rpy: [0, 0, 0]

# sensor_blackout:
#   product_count: 1 #sensor blackout triggered after first product is placed on any AGV
#   duration: 15

# drops:
#   drop_regions:
#     shipping_box_0_impeding:
#       frame: agv4::kit_tray_4
#       min:
#         xyz: [-0.3, -0.3, 0.0]
#       max:
#         xyz: [0.3, 0.3, 0.5]
#       destination:
#         xyz: [0.2, 0.3, 0.05]
#         rpy: [0, 0, 0.2]
#       product_type_to_drop: assembly_regulator_red
#     shipping_box_1_impeding:
#       frame: agv4::kit_tray_4
#       min:
#         xyz: [-0.3, -0.3, 0.0]
#       max:
#         xyz: [0.3, 0.3, 0.5]
#       destination:
#         xyz: [0.2, 0.3, 0.05]
#         rpy: [0, 0, 0.2]
#       product_type_to_drop: assembly_sensor_blue

faulty_products:
  - assembly_battery_green_20

